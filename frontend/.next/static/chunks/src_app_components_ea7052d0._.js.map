{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/LoginModal.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\ninterface LoginModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function LoginModal({ open, onClose }: LoginModalProps) {\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: 400,\r\n          p: 4,\r\n          borderRadius: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          {isSignUp ? \"Sign Up\" : \"Log In\"}\r\n        </Typography>\r\n        <TextField label=\"Email\" type=\"email\" fullWidth />\r\n        <TextField label=\"Password\" type=\"password\" fullWidth />\r\n        <Button variant=\"contained\" fullWidth>\r\n          {isSignUp ? \"Create Account\" : \"Login\"}\r\n        </Button>\r\n        <Button onClick={() => setIsSignUp(!isSignUp)}>\r\n          {isSignUp\r\n            ? \"Already have an account? Log in\"\r\n            : \"Don't have an account? Sign up\"}\r\n        </Button>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;AAFA;;;AAee,SAAS,WAAW,EAAE,IAAI,EAAE,OAAO,EAAmB;;IACnE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,qBACE,6LAAC,iMAAA,CAAA,QAAK;QAAC,MAAM;QAAM,SAAS;kBAC1B,cAAA,6LAAC,iMAAA,CAAA,QAAK;YACJ,WAAW;YACX,IAAI;gBACF,UAAU;gBACV,KAAK;gBACL,MAAM;gBACN,WAAW;gBACX,OAAO;gBACP,GAAG;gBACH,cAAc;gBACd,SAAS;gBACT,eAAe;gBACf,KAAK;YACP;;8BAEA,6LAAC,gNAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAK,OAAM;8BAC5B,WAAW,YAAY;;;;;;8BAE1B,6LAAC,6MAAA,CAAA,YAAS;oBAAC,OAAM;oBAAQ,MAAK;oBAAQ,SAAS;;;;;;8BAC/C,6LAAC,6MAAA,CAAA,YAAS;oBAAC,OAAM;oBAAW,MAAK;oBAAW,SAAS;;;;;;8BACrD,6LAAC,oMAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAY,SAAS;8BAClC,WAAW,mBAAmB;;;;;;8BAEjC,6LAAC,oMAAA,CAAA,SAAM;oBAAC,SAAS,IAAM,YAAY,CAAC;8BACjC,WACG,oCACA;;;;;;;;;;;;;;;;;AAKd;GApCwB;KAAA","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/NavBar.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport AppSettingsAltIcon from \"@mui/icons-material/AppSettingsAlt\";\r\nimport { Button, Stack } from \"@mui/material\";\r\nimport LoginModal from \"./LoginModal\";\r\n\r\nexport default function NavBar() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleLoginClick = () => setOpenModal(true);\r\n  const handleClose = () => setOpenModal(false);\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        elevation={0}\r\n        sx={{\r\n          backgroundColor: \"#fff\",\r\n          color: \"#000\",\r\n          px: 3,\r\n          py: 1,\r\n          borderBottom: \"1px solid #eee\",\r\n        }}\r\n      >\r\n        <Toolbar sx={{ justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Box\r\n              sx={{\r\n                backgroundColor: \"#2196f3\",\r\n                borderRadius: 2,\r\n                padding: 1,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <AppSettingsAltIcon sx={{ color: \"white\", fontSize: 32 }} />\r\n            </Box>\r\n            <Box>\r\n              <Typography fontWeight={700} fontSize={22} sx={{ letterSpacing: 1 }}>\r\n                Challenge Me\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"gray\" sx={{ fontSize: 15 }}>\r\n                Приемай предизвикателства, постигай цели\r\n              </Typography>\r\n            </Box>\r\n          </Stack>\r\n\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<StarIcon />}\r\n              sx={{\r\n                background: \"linear-gradient(to right, #fbc02d, #ff9800)\",\r\n                borderRadius: \"24px\",\r\n                textTransform: \"none\",\r\n                fontWeight: 600,\r\n                color: \"white\",\r\n                padding: 2,\r\n                \"&:hover\": {\r\n                  background: \"linear-gradient(to right, #f9a825, #fb8c00)\",\r\n                },\r\n              }}\r\n            >\r\n              0\r\n            </Button>\r\n            {isLoggedIn ? (\r\n              <Avatar alt=\"User\" src=\"/user.jpg\" />\r\n            ) : (\r\n              <Button onClick={handleLoginClick} variant=\"outlined\">\r\n                Log In\r\n              </Button>\r\n            )}\r\n          </Stack>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <LoginModal open={openModal} onClose={handleClose} />\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAVA;;;;;;;;;;;AAYe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,mBAAmB,IAAM,aAAa;IAC5C,MAAM,cAAc,IAAM,aAAa;IAEvC,qBACE;;0BACE,6LAAC,+JAAA,CAAA,UAAM;gBACL,UAAS;gBACT,WAAW;gBACX,IAAI;oBACF,iBAAiB;oBACjB,OAAO;oBACP,IAAI;oBACJ,IAAI;oBACJ,cAAc;gBAChB;0BAEA,cAAA,6LAAC,iKAAA,CAAA,UAAO;oBAAC,IAAI;wBAAE,gBAAgB;wBAAiB,YAAY;oBAAS;;sCACnE,6LAAC,iMAAA,CAAA,QAAK;4BAAC,WAAU;4BAAM,SAAS;4BAAG,YAAW;;8CAC5C,6LAAC,yJAAA,CAAA,UAAG;oCACF,IAAI;wCACF,iBAAiB;wCACjB,cAAc;wCACd,SAAS;wCACT,SAAS;wCACT,YAAY;wCACZ,gBAAgB;oCAClB;8CAEA,cAAA,6LAAC,sKAAA,CAAA,UAAkB;wCAAC,IAAI;4CAAE,OAAO;4CAAS,UAAU;wCAAG;;;;;;;;;;;8CAEzD,6LAAC,yJAAA,CAAA,UAAG;;sDACF,6LAAC,uKAAA,CAAA,UAAU;4CAAC,YAAY;4CAAK,UAAU;4CAAI,IAAI;gDAAE,eAAe;4CAAE;sDAAG;;;;;;sDAGrE,6LAAC,uKAAA,CAAA,UAAU;4CAAC,SAAQ;4CAAQ,OAAM;4CAAO,IAAI;gDAAE,UAAU;4CAAG;sDAAG;;;;;;;;;;;;;;;;;;sCAMnE,6LAAC,iMAAA,CAAA,QAAK;4BAAC,WAAU;4BAAM,SAAS;4BAAG,YAAW;;8CAC5C,6LAAC,oMAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,yBAAW,6LAAC,4JAAA,CAAA,UAAQ;;;;;oCACpB,IAAI;wCACF,YAAY;wCACZ,cAAc;wCACd,eAAe;wCACf,YAAY;wCACZ,OAAO;wCACP,SAAS;wCACT,WAAW;4CACT,YAAY;wCACd;oCACF;8CACD;;;;;;gCAGA,2BACC,6LAAC,+JAAA,CAAA,UAAM;oCAAC,KAAI;oCAAO,KAAI;;;;;yDAEvB,6LAAC,oMAAA,CAAA,SAAM;oCAAC,SAAS;oCAAkB,SAAQ;8CAAW;;;;;;;;;;;;;;;;;;;;;;;0BAQ9D,6LAAC,0IAAA,CAAA,UAAU;gBAAC,MAAM;gBAAW,SAAS;;;;;;;;AAG5C;GA5EwB;KAAA","debugId":null}}]
}