{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/LoginModal.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Stack,\r\n  Alert,\r\n} from \"@mui/material\";\r\n\r\ninterface LoginModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onLoginSuccess: () => void;\r\n  onSignUpClick: () => void;\r\n}\r\n\r\nexport default function LoginModal({\r\n  open,\r\n  onClose,\r\n  onLoginSuccess,\r\n  onSignUpClick,\r\n}: LoginModalProps) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const validateEmail = (email: string) => {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    if (!email || !password) {\r\n      setError(\"Email and password are required.\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\"); \r\n    onLoginSuccess();\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: 400,\r\n          p: 4,\r\n          borderRadius: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" align=\"center\" fontWeight={600}>\r\n          Log In\r\n        </Typography>\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n\r\n        <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          fullWidth\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <Stack spacing={1} mt={2}>\r\n          <Button variant=\"contained\" fullWidth onClick={handleLogin}>\r\n            Log In\r\n          </Button>\r\n\r\n          <Button variant=\"text\" onClick={onSignUpClick}>\r\n            Don't have an account? Sign up\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAFA;;;AAmBe,SAAS,WAAW,EACjC,IAAI,EACJ,OAAO,EACP,cAAc,EACd,aAAa,EACG;;IAChB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,gBAAgB,CAAC;QACrB,OAAO,6BAA6B,IAAI,CAAC;IAC3C;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,SAAS;YACT;QACF;QAEA,IAAI,CAAC,cAAc,QAAQ;YACzB,SAAS;YACT;QACF;QAEA,SAAS;QACT;IACF;IAEA,qBACE,6LAAC,iMAAA,CAAA,QAAK;QAAC,MAAM;QAAM,SAAS;kBAC1B,cAAA,6LAAC,iMAAA,CAAA,QAAK;YACJ,WAAW;YACX,IAAI;gBACF,UAAU;gBACV,KAAK;gBACL,MAAM;gBACN,WAAW;gBACX,OAAO;gBACP,GAAG;gBACH,cAAc;gBACd,SAAS;gBACT,eAAe;gBACf,KAAK;YACP;;8BAEA,6LAAC,gNAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAK,OAAM;oBAAS,YAAY;8BAAK;;;;;;gBAIxD,uBAAS,6LAAC,iMAAA,CAAA,QAAK;oBAAC,UAAS;8BAAS;;;;;;8BAEnC,6LAAC,6MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,MAAK;oBACL,SAAS;oBACT,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;8BAG1C,6LAAC,6MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,MAAK;oBACL,SAAS;oBACT,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;8BAG7C,6LAAC,iMAAA,CAAA,QAAK;oBAAC,SAAS;oBAAG,IAAI;;sCACrB,6LAAC,oMAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAY,SAAS;4BAAC,SAAS;sCAAa;;;;;;sCAI5D,6LAAC,oMAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAO,SAAS;sCAAe;;;;;;;;;;;;;;;;;;;;;;;AAOzD;GAhFwB;KAAA","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/SignUpModal.tsx"],"sourcesContent":["\"use client\";\r\nimport {\r\n  Modal,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface SignUpModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onLoginClick: () => void;\r\n  onSignUpSuccess: () => void;\r\n}\r\n\r\nexport default function SignUpModal({\r\n  open,\r\n  onClose,\r\n  onLoginClick,\r\n  onSignUpSuccess,\r\n}: SignUpModalProps) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const isValidEmail = (email: string) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regex.test(email);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!username.trim() || !password.trim()) {\r\n      setError(\"Username and password are required.\");\r\n      return;\r\n    }\r\n\r\n    if (email && !isValidEmail(email)) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    console.log({\r\n      username,\r\n      password,\r\n      email: email || null,\r\n      firstName: firstName || null,\r\n      lastName: lastName || null,\r\n    });\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setEmail(\"\");\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setError(\"\");\r\n\r\n    onSignUpSuccess();\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: 480,\r\n          bgcolor: \"background.paper\",\r\n          borderRadius: 2,\r\n          padding: 5,\r\n          boxShadow: 24,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" textAlign=\"center\" fontWeight={700} color=\"text.primary\">\r\n          Sign Up\r\n        </Typography>\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n\r\n        <TextField\r\n          label=\"Username *\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"Password *\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"Email (optional)\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"First Name (optional)\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"Last Name (optional)\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <Button variant=\"contained\" fullWidth onClick={handleSubmit}>\r\n          Sign Up\r\n        </Button>\r\n\r\n        <Button onClick={onLoginClick}>\r\n          Already have an account? Log in\r\n        </Button>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AATA;;;AAkBe,SAAS,YAAY,EAClC,IAAI,EACJ,OAAO,EACP,YAAY,EACZ,eAAe,EACE;;IACjB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,MAAM,QAAQ;QACd,OAAO,MAAM,IAAI,CAAC;IACpB;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI;YACxC,SAAS;YACT;QACF;QAEA,IAAI,SAAS,CAAC,aAAa,QAAQ;YACjC,SAAS;YACT;QACF;QACA,QAAQ,GAAG,CAAC;YACV;YACA;YACA,OAAO,SAAS;YAChB,WAAW,aAAa;YACxB,UAAU,YAAY;QACxB;QACA,YAAY;QACZ,YAAY;QACZ,SAAS;QACT,aAAa;QACb,YAAY;QACZ,SAAS;QAET;IACF;IAEA,qBACE,6LAAC,iMAAA,CAAA,QAAK;QAAC,MAAM;QAAM,SAAS;kBAC1B,cAAA,6LAAC,2LAAA,CAAA,MAAG;YACF,IAAI;gBACF,UAAU;gBACV,KAAK;gBACL,MAAM;gBACN,WAAW;gBACX,OAAO;gBACP,SAAS;gBACT,cAAc;gBACd,SAAS;gBACT,WAAW;gBACX,SAAS;gBACT,eAAe;gBACf,KAAK;YACP;;8BAEA,6LAAC,gNAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAK,WAAU;oBAAS,YAAY;oBAAK,OAAM;8BAAe;;;;;;gBAIjF,uBAAS,6LAAC,iMAAA,CAAA,QAAK;oBAAC,UAAS;8BAAS;;;;;;8BAEnC,6LAAC,6MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC3C,SAAS;;;;;;8BAGX,6LAAC,6MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,MAAK;oBACL,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC3C,SAAS;;;;;;8BAGX,6LAAC,6MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,MAAK;oBACL,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBACxC,SAAS;;;;;;8BAGX,6LAAC,6MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,OAAO;oBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;oBAC5C,SAAS;;;;;;8BAGX,6LAAC,6MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC3C,SAAS;;;;;;8BAGX,6LAAC,oMAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAY,SAAS;oBAAC,SAAS;8BAAc;;;;;;8BAI7D,6LAAC,oMAAA,CAAA,SAAM;oBAAC,SAAS;8BAAc;;;;;;;;;;;;;;;;;AAMvC;GApHwB;KAAA","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/ProfileModal.tsx"],"sourcesContent":["\"use client\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Modal,\r\n  Stack,\r\n  Typography,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Friend {\r\n  name: string;\r\n  points: number;\r\n  online: boolean;\r\n  avatar: string;\r\n}\r\n\r\ninterface ProfileModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst dummyFriends: Friend[] = [\r\n  {\r\n    name: \"Anna Smith\",\r\n    points: 2340,\r\n    online: true,\r\n    avatar: \"/user.jpg\",\r\n  },\r\n  {\r\n    name: \"John Doe\",\r\n    points: 1890,\r\n    online: false,\r\n    avatar: \"/user.jpg\",\r\n  },\r\n  {\r\n    name: \"Maria Garcia\",\r\n    points: 3120,\r\n    online: true,\r\n    avatar: \"/user.jpg\",\r\n  },\r\n];\r\n\r\nexport default function ProfileModal({\r\n  open,\r\n  onClose,\r\n  onLogout,\r\n}: ProfileModalProps) {\r\n  const [friends, setFriends] = useState<Friend[]>(dummyFriends);\r\n  const [challengesCompleted] = useState(23);\r\n  const [challengesActive] = useState(5);\r\n  const [challengesCreated] = useState(8);\r\n  const [points] = useState(1540);\r\n  const [addFriendOpen, setAddFriendOpen] = useState(false);\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <Box\r\n        sx={{\r\n          maxWidth: 700,\r\n          mx: \"auto\",\r\n          mt: 6,\r\n          bgcolor: \"#fff\",\r\n          borderRadius: 3,\r\n          boxShadow: 24,\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            background: \"linear-gradient(to right, #d53f8c, #805ad5)\",\r\n            color: \"white\",\r\n            p: 3,\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src=\"/user.jpg\"\r\n            sx={{ width: 80, height: 80, mx: \"auto\", mb: 1 }}\r\n          />\r\n          <Typography fontWeight=\"bold\" fontSize={24}>\r\n            John Smith\r\n          </Typography>\r\n          <Typography fontSize={18}>\r\n            {points} points\r\n          </Typography>\r\n\r\n          <Stack direction=\"row\" justifyContent=\"center\" spacing={4} mt={2}>\r\n            <Box>\r\n              <Typography align=\"center\" fontWeight=\"bold\">\r\n                {challengesCompleted}\r\n              </Typography>\r\n              <Typography variant=\"caption\">Completed</Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography align=\"center\" fontWeight=\"bold\">\r\n                {challengesActive}\r\n              </Typography>\r\n              <Typography variant=\"caption\">Active</Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography align=\"center\" fontWeight=\"bold\">\r\n                {challengesCreated}\r\n              </Typography>\r\n              <Typography variant=\"caption\">Created</Typography>\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n        <Box p={3}>\r\n          <Typography fontWeight=\"bold\" mb={2}>\r\n            Friends\r\n          </Typography>\r\n          <Stack spacing={2}>\r\n            {friends.map((friend, index) => (\r\n              <Paper\r\n                key={index}\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  p: 2,\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                  <Avatar src={friend.avatar} />\r\n                  <Box>\r\n                    <Typography fontWeight=\"bold\">{friend.name}</Typography>\r\n                    <Typography fontSize={13} color=\"text.secondary\">\r\n                      {friend.points} points\r\n                    </Typography>\r\n                    <Typography\r\n                      fontSize={12}\r\n                      color={friend.online ? \"green\" : \"gray\"}\r\n                    >\r\n                      {friend.online ? \"Online\" : \"Offline\"}\r\n                    </Typography>\r\n                  </Box>\r\n                </Stack>\r\n                <Button size=\"small\" variant=\"outlined\">\r\n                  View\r\n                </Button>\r\n              </Paper>\r\n            ))}\r\n          </Stack>\r\n\r\n          <Box\r\n            mt={3}\r\n            sx={{\r\n              border: \"1px dashed #ccc\",\r\n              borderRadius: 2,\r\n              textAlign: \"center\",\r\n              p: 3,\r\n              color: \"#777\",\r\n              cursor: \"pointer\",\r\n              transition: \"background 0.2s\",\r\n              '&:hover': { background: '#f5f5f5' },\r\n            }}\r\n            onClick={() => setAddFriendOpen(true)}\r\n          >\r\n            <Typography fontSize={32} color=\"#2196f3\">+</Typography>\r\n            <Typography fontWeight=\"bold\">Add Friend</Typography>\r\n            <Typography variant=\"body2\">\r\n              Find new friends to challenge!\r\n            </Typography>\r\n          </Box>\r\n\r\n          {addFriendOpen && (\r\n            <AddFriendModal\r\n              open={addFriendOpen}\r\n              onClose={() => setAddFriendOpen(false)}\r\n              onAdd={(username: string) => {\r\n                setFriends((prev) => [\r\n                  ...prev,\r\n                  {\r\n                    name: username,\r\n                    points: 0,\r\n                    online: false,\r\n                    avatar: \"/user.jpg\",\r\n                  },\r\n                ]);\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\nimport AddFriendModal from \"./AddFriendModal\";\r\n\r\n        <Divider />\r\n        <Box textAlign=\"center\" p={2}>\r\n          <Button\r\n            color=\"error\"\r\n            onClick={onLogout}\r\n            sx={{ textTransform: \"none\", fontWeight: \"bold\" }}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/NavBar.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Box,\r\n  Avatar,\r\n  Stack,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport AppSettingsAltIcon from \"@mui/icons-material/AppSettingsAlt\";\r\n\r\nimport LoginModal from \"./LoginModal\";\r\nimport SignUpModal from \"./SignUpModal\";\r\nimport ProfileModal from \"./ProfileModal\";\r\n\r\nexport default function NavBar() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [openLogin, setOpenLogin] = useState(false);\r\n  const [openSignUp, setOpenSignUp] = useState(false);\r\n  const [openProfile, setOpenProfile] = useState(false);\r\n\r\n  // Modal handlers\r\n  const handleLoginOpen = () => setOpenLogin(true);\r\n  const handleLoginClose = () => setOpenLogin(false);\r\n  const handleSignUpOpen = () => {\r\n    setOpenLogin(false);\r\n    setOpenSignUp(true);\r\n  };\r\n  const handleSignUpClose = () => setOpenSignUp(false);\r\n  const handleProfileClose = () => setOpenProfile(false);\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsAuthenticated(true);\r\n    setOpenLogin(false);\r\n    setOpenSignUp(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsAuthenticated(false);\r\n    handleProfileClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        elevation={0}\r\n        sx={{\r\n          backgroundColor: \"#fff\",\r\n          color: \"#000\",\r\n          px: 3,\r\n          py: 1,\r\n          borderBottom: \"1px solid #eee\",\r\n        }}\r\n      >\r\n        <Toolbar sx={{ justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n          {/* Logo + App Name */}\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Box\r\n              sx={{\r\n                backgroundColor: \"#2196f3\",\r\n                borderRadius: 2,\r\n                padding: 1,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <AppSettingsAltIcon sx={{ color: \"white\", fontSize: 32 }} />\r\n            </Box>\r\n            <Box>\r\n              <Typography fontWeight={700} fontSize={22} sx={{ letterSpacing: 1, color: \"#2196f3\" }}>\r\n                Challenge Me\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"gray\" sx={{ fontSize: 15 }}>\r\n                Take on challenges, achieve goals\r\n              </Typography>\r\n            </Box>\r\n          </Stack>\r\n\r\n          {/* Right-side buttons */}\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<StarIcon />}\r\n              sx={{\r\n                background: \"linear-gradient(to right, #fbc02d, #ff9800)\",\r\n                borderRadius: \"24px\",\r\n                textTransform: \"none\",\r\n                fontWeight: 600,\r\n                color: \"white\",\r\n                px: 2,\r\n                \"&:hover\": {\r\n                  background: \"linear-gradient(to right, #f9a825, #fb8c00)\",\r\n                },\r\n              }}\r\n            >\r\n              0\r\n            </Button>\r\n\r\n            {isAuthenticated ? (\r\n              <Avatar\r\n                alt=\"User\"\r\n                src=\"/user.jpg\"\r\n                onClick={() => setOpenProfile(true)}\r\n                sx={{ cursor: \"pointer\" }}\r\n              />\r\n            ) : (\r\n              <Button onClick={handleLoginOpen} variant=\"outlined\">\r\n                Log In\r\n              </Button>\r\n            )}\r\n          </Stack>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Modals */}\r\n      <LoginModal\r\n        open={openLogin}\r\n        onClose={handleLoginClose}\r\n        onSignUpClick={handleSignUpOpen}\r\n        onLoginSuccess={handleLoginSuccess}\r\n      />\r\n\r\n      <SignUpModal\r\n        open={openSignUp}\r\n        onClose={handleSignUpClose}\r\n        onLoginClick={handleLoginOpen}\r\n        onSignUpSuccess={handleLoginSuccess}\r\n      />\r\n\r\n      <ProfileModal\r\n        open={openProfile}\r\n        onClose={handleProfileClose}\r\n        onLogout={handleLogout}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1005, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n       <div className=\"bg-[#EBEFF4] min-h-screen\">\r\n      <main className=\"pt-6 px-6\">\r\n        <h1></h1>\r\n        <p className=\"text-lg text-gray-700 mb-6\">\r\n          \r\n        </p>\r\n      </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE;;0BACE,6LAAC,sIAAA,CAAA,UAAM;;;;;0BACN,6LAAC;gBAAI,WAAU;0BAChB,cAAA,6LAAC;oBAAK,WAAU;;sCACd,6LAAC;;;;;sCACD,6LAAC;4BAAE,WAAU;;;;;;;;;;;;;;;;;;;AAOrB;KAdwB","debugId":null}}]
}