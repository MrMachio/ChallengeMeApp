{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/LoginModal.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Stack,\r\n  Alert,\r\n} from \"@mui/material\";\r\n\r\ninterface LoginModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onLoginSuccess: () => void;\r\n  onSignUpClick: () => void;\r\n}\r\n\r\nexport default function LoginModal({\r\n  open,\r\n  onClose,\r\n  onLoginSuccess,\r\n  onSignUpClick,\r\n}: LoginModalProps) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const validateEmail = (email: string) => {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    if (!email || !password) {\r\n      setError(\"Email and password are required.\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\"); \r\n    onLoginSuccess();\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: 400,\r\n          p: 4,\r\n          borderRadius: 3,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" align=\"center\" fontWeight={600}>\r\n          Log In\r\n        </Typography>\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n\r\n        <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          fullWidth\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <Stack spacing={1} mt={2}>\r\n          <Button variant=\"contained\" fullWidth onClick={handleLogin}>\r\n            Log In\r\n          </Button>\r\n\r\n          <Button variant=\"text\" onClick={onSignUpClick}>\r\n            Don't have an account? Sign up\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;AAmBe,SAAS,WAAW,EACjC,IAAI,EACJ,OAAO,EACP,cAAc,EACd,aAAa,EACG;IAChB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,gBAAgB,CAAC;QACrB,OAAO,6BAA6B,IAAI,CAAC;IAC3C;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,SAAS;YACT;QACF;QAEA,IAAI,CAAC,cAAc,QAAQ;YACzB,SAAS;YACT;QACF;QAEA,SAAS;QACT;IACF;IAEA,qBACE,8OAAC,8LAAA,CAAA,QAAK;QAAC,MAAM;QAAM,SAAS;kBAC1B,cAAA,8OAAC,8LAAA,CAAA,QAAK;YACJ,WAAW;YACX,IAAI;gBACF,UAAU;gBACV,KAAK;gBACL,MAAM;gBACN,WAAW;gBACX,OAAO;gBACP,GAAG;gBACH,cAAc;gBACd,SAAS;gBACT,eAAe;gBACf,KAAK;YACP;;8BAEA,8OAAC,6MAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAK,OAAM;oBAAS,YAAY;8BAAK;;;;;;gBAIxD,uBAAS,8OAAC,8LAAA,CAAA,QAAK;oBAAC,UAAS;8BAAS;;;;;;8BAEnC,8OAAC,0MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,MAAK;oBACL,SAAS;oBACT,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;8BAG1C,8OAAC,0MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,MAAK;oBACL,SAAS;oBACT,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;8BAG7C,8OAAC,8LAAA,CAAA,QAAK;oBAAC,SAAS;oBAAG,IAAI;;sCACrB,8OAAC,iMAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAY,SAAS;4BAAC,SAAS;sCAAa;;;;;;sCAI5D,8OAAC,iMAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAO,SAAS;sCAAe;;;;;;;;;;;;;;;;;;;;;;;AAOzD","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/SignUpModal.tsx"],"sourcesContent":["\"use client\";\r\nimport {\r\n  Modal,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface SignUpModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onLoginClick: () => void;\r\n  onSignUpSuccess: () => void;\r\n}\r\n\r\nexport default function SignUpModal({\r\n  open,\r\n  onClose,\r\n  onLoginClick,\r\n  onSignUpSuccess,\r\n}: SignUpModalProps) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const isValidEmail = (email: string) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regex.test(email);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!username.trim() || !password.trim()) {\r\n      setError(\"Username and password are required.\");\r\n      return;\r\n    }\r\n\r\n    if (email && !isValidEmail(email)) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n    console.log({\r\n      username,\r\n      password,\r\n      email: email || null,\r\n      firstName: firstName || null,\r\n      lastName: lastName || null,\r\n    });\r\n\r\n    // Reset form\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setEmail(\"\");\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setError(\"\");\r\n\r\n    onSignUpSuccess();\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: 480,\r\n          bgcolor: \"background.paper\",\r\n          borderRadius: 2,\r\n          padding: 5,\r\n          boxShadow: 24,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" textAlign=\"center\" fontWeight={700} color=\"text.primary\">\r\n          Sign Up\r\n        </Typography>\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n\r\n        <TextField\r\n          label=\"Username *\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"Password *\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"Email (optional)\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"First Name (optional)\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          label=\"Last Name (optional)\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n          fullWidth\r\n        />\r\n\r\n        <Button variant=\"contained\" fullWidth onClick={handleSubmit}>\r\n          Sign Up\r\n        </Button>\r\n\r\n        <Button onClick={onLoginClick}>\r\n          Already have an account? Log in\r\n        </Button>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AATA;;;;AAkBe,SAAS,YAAY,EAClC,IAAI,EACJ,OAAO,EACP,YAAY,EACZ,eAAe,EACE;IACjB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,MAAM,QAAQ;QACd,OAAO,MAAM,IAAI,CAAC;IACpB;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI;YACxC,SAAS;YACT;QACF;QAEA,IAAI,SAAS,CAAC,aAAa,QAAQ;YACjC,SAAS;YACT;QACF;QACA,QAAQ,GAAG,CAAC;YACV;YACA;YACA,OAAO,SAAS;YAChB,WAAW,aAAa;YACxB,UAAU,YAAY;QACxB;QAEA,aAAa;QACb,YAAY;QACZ,YAAY;QACZ,SAAS;QACT,aAAa;QACb,YAAY;QACZ,SAAS;QAET;IACF;IAEA,qBACE,8OAAC,8LAAA,CAAA,QAAK;QAAC,MAAM;QAAM,SAAS;kBAC1B,cAAA,8OAAC,wLAAA,CAAA,MAAG;YACF,IAAI;gBACF,UAAU;gBACV,KAAK;gBACL,MAAM;gBACN,WAAW;gBACX,OAAO;gBACP,SAAS;gBACT,cAAc;gBACd,SAAS;gBACT,WAAW;gBACX,SAAS;gBACT,eAAe;gBACf,KAAK;YACP;;8BAEA,8OAAC,6MAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAK,WAAU;oBAAS,YAAY;oBAAK,OAAM;8BAAe;;;;;;gBAIjF,uBAAS,8OAAC,8LAAA,CAAA,QAAK;oBAAC,UAAS;8BAAS;;;;;;8BAEnC,8OAAC,0MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC3C,SAAS;;;;;;8BAGX,8OAAC,0MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,MAAK;oBACL,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC3C,SAAS;;;;;;8BAGX,8OAAC,0MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,MAAK;oBACL,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBACxC,SAAS;;;;;;8BAGX,8OAAC,0MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,OAAO;oBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;oBAC5C,SAAS;;;;;;8BAGX,8OAAC,0MAAA,CAAA,YAAS;oBACR,OAAM;oBACN,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC3C,SAAS;;;;;;8BAGX,8OAAC,iMAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAY,SAAS;oBAAC,SAAS;8BAAc;;;;;;8BAI7D,8OAAC,iMAAA,CAAA,SAAM;oBAAC,SAAS;8BAAc;;;;;;;;;;;;;;;;;AAMvC","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/components/NavBar.tsx"],"sourcesContent":["\"use client\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { Button, Stack } from \"@mui/material\";\r\nimport AppSettingsAltIcon from \"@mui/icons-material/AppSettingsAlt\";\r\nimport { useState } from \"react\";\r\nimport LoginModal from \"./LoginModal\";\r\nimport SignUpModal from \"./SignUpModal\";\r\n\r\nexport default function NavBar() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [openLogin, setOpenLogin] = useState(false);\r\n  const [openSignUp, setOpenSignUp] = useState(false);\r\n\r\n  const handleLoginOpen = () => setOpenLogin(true);\r\n  const handleLoginClose = () => setOpenLogin(false);\r\n\r\n  const handleSignUpOpen = () => {\r\n    setOpenLogin(false);\r\n    setOpenSignUp(true);\r\n  };\r\n  const handleSignUpClose = () => setOpenSignUp(false);\r\n\r\n  const handleLoginSuccess = () => {\r\n    setIsAuthenticated(true);\r\n    setOpenLogin(false);\r\n    setOpenSignUp(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        elevation={0}\r\n        sx={{\r\n          backgroundColor: \"#fff\",\r\n          color: \"#000\",\r\n          px: 3,\r\n          py: 1,\r\n          borderBottom: \"1px solid #eee\",\r\n        }}\r\n      >\r\n        <Toolbar sx={{ justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Box\r\n              sx={{\r\n                backgroundColor: \"#2196f3\",\r\n                borderRadius: 2,\r\n                padding: 1,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <AppSettingsAltIcon sx={{ color: \"white\", fontSize: 32 }} />\r\n            </Box>\r\n            <Box>\r\n              <Typography fontWeight={700} fontSize={22} sx={{ letterSpacing: 1, color: '#2196f3' }}>\r\n                Challenge Me\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"gray\" sx={{ fontSize: 15 }}>\r\n                Take on challenges, achieve goals\r\n              </Typography>\r\n            </Box>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<StarIcon />}\r\n              sx={{\r\n                background: \"linear-gradient(to right, #fbc02d, #ff9800)\",\r\n                borderRadius: \"24px\",\r\n                textTransform: \"none\",\r\n                fontWeight: 600,\r\n                color: \"white\",\r\n                px: 2,\r\n                \"&:hover\": {\r\n                  background: \"linear-gradient(to right, #f9a825, #fb8c00)\",\r\n                },\r\n              }}\r\n            >\r\n              0\r\n            </Button>\r\n\r\n            {isAuthenticated ? (\r\n              <Avatar alt=\"User\" src=\"/user.jpg\" />\r\n            ) : (\r\n              <Button onClick={handleLoginOpen} variant=\"outlined\">\r\n                Log In\r\n              </Button>\r\n            )}\r\n          </Stack>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <LoginModal\r\n        open={openLogin}\r\n        onClose={handleLoginClose}\r\n        onSignUpClick={handleSignUpOpen}\r\n        onLoginSuccess={handleLoginSuccess}\r\n      />\r\n\r\n      <SignUpModal\r\n        open={openSignUp}\r\n        onClose={handleSignUpClose}\r\n        onLoginClick={() => {\r\n          handleSignUpClose();\r\n          handleLoginOpen();\r\n        }}\r\n        onSignUpSuccess={handleLoginSuccess}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;;AAae,SAAS;IACtB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,kBAAkB,IAAM,aAAa;IAC3C,MAAM,mBAAmB,IAAM,aAAa;IAE5C,MAAM,mBAAmB;QACvB,aAAa;QACb,cAAc;IAChB;IACA,MAAM,oBAAoB,IAAM,cAAc;IAE9C,MAAM,qBAAqB;QACzB,mBAAmB;QACnB,aAAa;QACb,cAAc;IAChB;IAEA,qBACE;;0BACE,8OAAC,4JAAA,CAAA,UAAM;gBACL,UAAS;gBACT,WAAW;gBACX,IAAI;oBACF,iBAAiB;oBACjB,OAAO;oBACP,IAAI;oBACJ,IAAI;oBACJ,cAAc;gBAChB;0BAEA,cAAA,8OAAC,8JAAA,CAAA,UAAO;oBAAC,IAAI;wBAAE,gBAAgB;wBAAiB,YAAY;oBAAS;;sCACnE,8OAAC,8LAAA,CAAA,QAAK;4BAAC,WAAU;4BAAM,SAAS;4BAAG,YAAW;;8CAC5C,8OAAC,sJAAA,CAAA,UAAG;oCACF,IAAI;wCACF,iBAAiB;wCACjB,cAAc;wCACd,SAAS;wCACT,SAAS;wCACT,YAAY;wCACZ,gBAAgB;oCAClB;8CAEA,cAAA,8OAAC,mKAAA,CAAA,UAAkB;wCAAC,IAAI;4CAAE,OAAO;4CAAS,UAAU;wCAAG;;;;;;;;;;;8CAEzD,8OAAC,sJAAA,CAAA,UAAG;;sDACF,8OAAC,oKAAA,CAAA,UAAU;4CAAC,YAAY;4CAAK,UAAU;4CAAI,IAAI;gDAAE,eAAe;gDAAG,OAAO;4CAAU;sDAAG;;;;;;sDAGvF,8OAAC,oKAAA,CAAA,UAAU;4CAAC,SAAQ;4CAAQ,OAAM;4CAAO,IAAI;gDAAE,UAAU;4CAAG;sDAAG;;;;;;;;;;;;;;;;;;sCAKnE,8OAAC,8LAAA,CAAA,QAAK;4BAAC,WAAU;4BAAM,SAAS;4BAAG,YAAW;;8CAC5C,8OAAC,iMAAA,CAAA,SAAM;oCACL,SAAQ;oCACR,yBAAW,8OAAC,yJAAA,CAAA,UAAQ;;;;;oCACpB,IAAI;wCACF,YAAY;wCACZ,cAAc;wCACd,eAAe;wCACf,YAAY;wCACZ,OAAO;wCACP,IAAI;wCACJ,WAAW;4CACT,YAAY;wCACd;oCACF;8CACD;;;;;;gCAIA,gCACC,8OAAC,4JAAA,CAAA,UAAM;oCAAC,KAAI;oCAAO,KAAI;;;;;yDAEvB,8OAAC,iMAAA,CAAA,SAAM;oCAAC,SAAS;oCAAiB,SAAQ;8CAAW;;;;;;;;;;;;;;;;;;;;;;;0BAO7D,8OAAC,uIAAA,CAAA,UAAU;gBACT,MAAM;gBACN,SAAS;gBACT,eAAe;gBACf,gBAAgB;;;;;;0BAGlB,8OAAC,wIAAA,CAAA,UAAW;gBACV,MAAM;gBACN,SAAS;gBACT,cAAc;oBACZ;oBACA;gBACF;gBACA,iBAAiB;;;;;;;;AAIzB","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/KRISTIYAN/Documents/Github/ChallengeMeApp/ChallengeMeApp/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n       <div className=\"bg-[#EBEFF4] min-h-screen\">\r\n      <main className=\"pt-6 px-6\">\r\n        <h1></h1>\r\n        <p className=\"text-lg text-gray-700 mb-6\">\r\n          \r\n        </p>\r\n      </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE;;0BACE,8OAAC,mIAAA,CAAA,UAAM;;;;;0BACN,8OAAC;gBAAI,WAAU;0BAChB,cAAA,8OAAC;oBAAK,WAAU;;sCACd,8OAAC;;;;;sCACD,8OAAC;4BAAE,WAAU;;;;;;;;;;;;;;;;;;;AAOrB","debugId":null}}]
}